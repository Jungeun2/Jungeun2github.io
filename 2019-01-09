▶ 2019.01.08◀

▷ Java의 정석 [ Chapter 03 - 연산자 ]

# 조건 연산자 ? :

조건 연산자는 조건식, 식1 식2 모두 세 개의 피연산자를 필요로 하는 삼항 연산자이며, 삼항 연산자는 조건 연산자 하나 뿐이다.
조건 연산자는 첫 번째 피연산자인 조건식의 평가결과에 따라 다른 결과를 반환한다.
조건식의 평가결과가 ture이면 식1이, false이면 식2가 연산결과가 된다.

ex) result = (x > y) ? x : y ; // 식 'x > y'의 결과가 ture이면 변수 result에는 x의 값이 저장되고, false이면 y의 값이 저장된다.
만일 x의 값이 5, y의 값이 3이라면 ?
  result = (x > y) ? x : y ;
  result = (5 > 3) ? 5 : 3 ;
  result = (true) ? 5 : 3 ;  // 조건식이 true이므로 연산결과는 5
  result = 5 ;

조건 연산자는 조건문인 if문으로 바꿔 쓸 수 있으며, if문 대신 조건 연산자를 사용하면 코드를 간단히 할 수 있다.

# 대입 연산자 = op=

대입 연산자는 변수와 같은 저장공간에 값 또는 수식의 연산결과를 저장하는데 사용된다.
이 연산자는 오른쪽 피연산자의 값을 왼쪽 피연산자에 저장한다. 그리고 저장된 값을 연산결과로 반환한다.

ex) System.out.println(x = 3);  // 변수 x에 3이 저장됨
    System.out.println(3);      // 연산결과인 3이 출력된다.
   
대입 연산자는 연산자들 중에서 가장 낮은 우선순위를 가지고 있기 때문에 식에서 제일 나중에 수행된다. 진행 방향은 오른쪽 > 왼쪽

# lvalue와 rvalue

대입 연산자의 왼쪽 피연산자를 'lvalue'이라 하고, 오른쪽 피연산자를 'rvalue'라고 한다.
대입연산자으 rvalue는 변수뿐만 아니라 식이나 상수 등이 모두 가능한 반면, lvalue는 반드시 변수처럼 값을 변경할 수 있는 것이어야 한다.
그래서 리터럴이나 상수같이 값을 저장할 수 없는 것들은 lvalue가 될 수 없다.

# 복합 대입 연산자

대입 연산자는 다른 연산자와 결합하여 'op='와 같은 방식으로 사용될 수 있다.
예를 들면, 'i = i + 3'은  'i += 3'과 같이 표현될 수 있다. 결합된 두 연산자는 반드시 공백없이 붙여써야함.

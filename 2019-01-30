▶ 2019.01.30◀

▷ Java의 정석 [ Chapter 05 - 배열 ]

# 배열의 길이 변경하기

배열의 길이를 변경하는 방법 :
 1. 더 큰 배열을 새로 생성한다.
 2. 기존 배열의 내용을 새로운 배열에 복사한다.
 
처음부터 배열의 길이를 넉넉하게 잡아줘서 새로 배열을 생성해야하는 상황이 가능한 적게 발생하도록 해야 한다.
그렇다고 배열의 길이를 너무 크게 잡으면 메모리를 낭비하게 되므로, 기존의 2배정도의 길이로 생성하는 것이 좋다.

# 배열의 초기화

배열은 생성 동시에 자동적으로 자신의 타입에 해당하는 기본값으로 초기화되므로 배열을 사용하기 전에 따로 초기화를 해주지 않아도 되지만,
원하는 값을 저장하려면 아래와 같이 각 요소마다 값을 지정해 줘야한다.
ex) int [] score = new int [5];
    score[0] = 50;
    score[1] = 60;
    score[2] = 70;
    score[3] = 80;
    score[4] = 90;
    
배열의 길이가 큰 경우에는 이렇게 요소 하나하나에 값을 지정하기 보다는 for문을 사용하는 것이 좋다.
위의 코드를 for문을 이용해서 바꾸면 다음과 같다.
ex) int [] score = new int [5];
    for(int i = 0; i< score.length; i++)
      score[i] = i * 10 + 50;

# 배열의 출력

배열을 초기화할 때 for문을 사용하듯이, 배열에 저장된 값을 확인할 때도 다음과 같이 for문을 사용하면 된다.
ex) int[] iArr = { 100, 95, 80, 70, 60 };   // 배열의 요소를 순서댈 하나씩 출력
    for(int i = 0; i < iArr.length; i++) {
      System.out.println(iArr[i]);  }

# 배열의 복사

배열은 한번 생성하면 그 길이를 변경할 수 없기 때문에 더 많은 저장공간이 필요하다면 보다 큰 배열을 새로 만들고,
이전 뱅열로부터 내용을 복사해야한다고 했다. 배열을 복사하는 방법은 두 가지가 있는데, 먼저 for문을 이용해서 배열을 복사하는 방법은 다음과 같다.
ex) int [] arr = new int [5];
    '''
    int [] tmp = new int [arr.length*2];  // 기존 배열보다 길이가 2배인 배열 생성
    for(int i = 0; i < arr.length; i++)
      tmp[i] = arr.[i];  // arr[i]의 값을 tmp[i]에 저장
    arr = tmp;  // 참조변수 arr이 새로운 배열을 가리키게 한다.

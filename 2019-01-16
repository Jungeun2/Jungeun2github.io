▶ 2019.01.16◀

▷ Java의 정석 [ Chapter 04 - 조건문과 반복문 ]

# 중첩 if문

if문의 블럭 내에 또 다른 if문을 포함시키는 것이 가능한데 이것을 중첩 if문이라고 부르며 중첩의 횟수에는 거의 제한이 없다.
ex) if (조건식1) {
           // 조건식1의 연산결과가 true일 때 수행될 문장들을 적는다.
           if (조건식2) {
                  // 조건식1과 조건식2가 모두 true일 때 수행될 문장들
           } else {
                  // 조건식1이 true이고, 조건식 2가 false일 때 수행되는 문장들
           }
    } else {
        // 조건식1이 false일 때 수행되는 문장들
    }
위와 같이 내부의 if문은 외부의 if문보다 안쪽으로 들여쓰기를 해서 두 if문의 범위가 명확히 구분될 수 있도록 작성해야 한다.
중첩if문에서는 괄호의 생략에 더욱 조심해야한다. 바깥쪽의 if문과 안쪽의 if문이 엉켜서 의도한 바와 다르게 형성될 수도 있기 때문이다.

# switch문

if문은 조건식의 결과가 참과 거짓 두 가지 밖에 없기 때문에 경우의 수가 많아질수록 else-if를 계속 추가해야하므로
조건식이 많아져서 복잡해지고, 여러 개의 조건식을 계산해야하므로 처리시간도 많이 걸린다.
이러한 if문과 달리 switch문은 단 하나의 조건식으로 많은 경우의 수를 처리할 수 있고, 표현도 간결하므로 알아보기 쉽다.

switch문은 조건식을 먼저 계산한 다음, 그 결과가 일치하는 case문으로 이동한다.
이동한 case문 아래에 있는 문문장들을 수행하며, break문을 만나면 전체 switch문을 빠져나가게 된다.

만일 조건식의 결과와 일치하는 case문이 하나도 없는 경우에는 default문으로 이동한다.
default문은 if문의 else블럭과 같은 역할을 한다고 보면 이해가 쉬울 것이다. default문의 위치는 어디라고 상관없으나
보통 마지막에 놓기 때문에 break문을 쓰지 않아도 된다.

# switch문의 제약조건

switch문의 조건식은 결과값이 반드시 정수이어야 하며, 이 값과 일치하는 case문으로 이동하기 때문에 case문의 값 역시 정수이어야 한다.
그리고 중복되지 않아야 한다. 같은 값의 case문이 여러 개이면, 어디로 이동해야할 지 알 수 없기 때문이다.
게다가 case무문의 값은 반드시 상수이어야 한다. 변수나 실수, 문자열은 case문의 값을으로 사용할 수 없다.

"
1. switch문의 조건식 결과는 정수 또는 문자열이어야 한다.
2. case문의 값은 정수 상수만 가능하며, 중복되지 않아야 한다.

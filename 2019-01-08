▶ 2019.01.08◀

▷ Java의 정석 [ Chapter 03 - 연산자 ]

# 비트 연산자 & | ^ ~ << >>

비트 연산자는 피연산자를 비트단위로 논리 연산한다. 피연산자로 실수는 허용 X 정수만 허용된다.
| (OR연산자)   피연산자 중 한 쪽의 값이 1이면, 1을 결과로 얻는다. 그 외에는 0을 얻는다.
& (AND연산자)  피연산자 양 쪽이 모두 1이어야만 1을 결과로 얻는다. 그 외에는 0을 얻는다.
^ (XOR연산자)  피연산자의 값이 서로 다를 때만 1을 결과로 얻는다. 같을 때는 0을 얻는다.

비트OR연산자 '|'는 주로 특정 비트의 값을 변경할 때 사용한다.
비트AND연산자 '&'는 주로 특정 비트의 값을 뽑아낼 때 사용한다.
비트XOR연산자'^'는 두 피연산자의 비트가 다를 때만 1이 된다.

# 비트 전환 연산자 ~

이 연산자는 피연산자를 2진수로 표현했을 때, 0은 1로, 1은 0으로 바꾼다. 논리부정 연산자 '!'와 유사하다.
비트 전환 연산자'~'에 의해 '비트 전환'되고 나면, 부호있는 타입의 피연산자는 부호가 반대로 변경된다.
즉, 피연산자의 '1의 보수'를 얻을 수 있는 것이다. 그래서 비트전환연산자를 '1의 보수'연산자라고도 한다.

# 쉬프트 연산자 << >>

이 연산자는 피연산자의 각 자리(2진수로 표현했을 때)를 '오른쪽(>>)'또는 '왼쪽(<<)'으로 이동한다고 해서 '쉬프트 연산자'이다.
예를 들어 '8 <<2'는 왼쪽 피연산자인 10진수 8의 2진수를 왼쪽으로 2자리 이동한다.
이 때, 자리이동으로 저장범위를 벗어난 값들은 버려지고 빈자리는 0으로 채워진다.
